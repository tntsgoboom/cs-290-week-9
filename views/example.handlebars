<h2>Example Call</h2>
<br>
<form id="askSummoner">
  Find 10 most recent champions played by a summoner<br>
  <br>
  Summoner Name: <input id="name" maxlength="255" name="name" type="text" /><br>
  <button id="insert" type="button" value="insert">Find champs</button>
</form>
<br>
<ol id="champList">
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
<li style="visibility:hidden"></li>
</ol>
<br>
<br>
<h3>How it works:</h3>
<p>
First we make a call to get the SummonerID. Once we have the SummonerID we can use that to call recent games based on the ID. That will return an array with a default of 10 most recent games. In each one we can grab the championID for that game and then make a call to the static champion data to get the champion name. After we get the champion name, we populate the list item for that call.
</p>
<br>
<h3>Initial Call:</h3>
<p>
<span class="apicall">
var reqSumId = new XMLHttpRequest();<br>
    reqSumId.open('GET', 'https://na.api.pvp.net/api/lol/na/v1.4/summoner/by-name/'+name+'?api_key=', true);<br>
    reqSumId.addEventListener('load',function(){<br>
      if(reqSumId.status >= 200 && reqSumId.status < 400) {<br>
	var response = JSON.parse(reqSumId.responseText);<br>
	name = name.toLowerCase();<br>
	var sumId = response[""+name].id;<br>
<br>
	console.log(sumId);<br>
</span>
<br>
Again we create the XMLHttpRequest, which the RiotApi uses only get requests. When we get the response back, the object that is returned is named the lowercase version of the summonername. So we use the name variable as a string and get the id of that object. For debugging I console the summoner ID.<br>
</p>
<br>
<h3>Getting recent games:</h3>
<p>
<span class="apicall">
var reqRG = new XMLHttpRequest();<br>
	reqRG.open('GET', 'https://na.api.pvp.net/api/lol/na/v1.3/game/by-summoner/'+sumId+'/recent?api_key=', true);<br>
	reqRG.addEventListener('load', function() {<br>
	  if(reqRG.status >= 200 && reqRG.status < 400) {<br>
	    var response = JSON.parse(reqRG.responseText);<br>
	    
	    var champId = {};<br>
	    var reqChamp = {};<br>
	    for(var i = 0; i < 10; i++) {<br>
	      champId[i] = response.games[i].championId;<br>
	      console.log(champId[i]);<br>
</span>
<br>
Creating a new XMLHttpRequest to handle getting the most recent games. Once we get that object back, we prepare for making 10 asynchronous calls to get each champion name. We do this by creating a champId object and a reqChamp object to hold all our IDs and XMLHttpRequests together with the same 'i' value.
</p>
<br>
<h3>Getting each champion name and populating the list:</h3>
<p>
<span class="apicall">
reqChamp[i] = new XMLHttpRequest();<br>
	      reqChamp[i].order = i;<br>
	      reqChamp[i].open('GET', 'https://global.api.pvp.net/api/lol/static-data/na/v1.2/champion/'+champId[i]+'?api_key=', true);<br>
	      reqChamp[i].addEventListener('load', function() {<br>
		if(this.status >= 200 && this.status < 400) {<br>
		  var response = JSON.parse(this.responseText);<br>
<br>
		  console.log(this.order);<br>
		  console.log(response.name);<br>
<br>
		  champList.children[this.order].innerHTML = response.name;<br>
		  champList.children[this.order].style.visibility = "visible";<br>
</span>
<br>
For each of the 10 recent games we create a new XMLHttpRequest. To keep track of the most recent champions first, we set a parameter 'order' that we can use inside our anonymous function. Then once we get the champion name back, we set the text of the li to the champion name and set it to visible.
</p>
<br>
<a href="/BasicCall"><button type="button" class="move">Prev</button></a><a href="/UsefulLinks"><button type="button" class="move">Next</button></a>
<script src="func.js"></script>

